{"version":3,"sources":["app/js/sprite-sheet.js"],"names":[],"mappings":"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","file":"app/js/sprite-sheet.js","sourcesContent":["import {isEqual} from './util.js';\n\nclass SpriteSheet{\n  constructor(){\n    this.sheets = {};\n    this.context = document.createElement('canvas').getContext('2d');\n  }\n    \n  get({path}){\n    return new Promise(resolve => {\n      Object.keys(this.sheets).indexOf(path) !== -1 ? \n        resolve(this.sheets[path]) :\n        this.load({path: path})\n          .then(sheet => {\n            this.sheets[path] = sheet;\n            resolve(sheet);\n          });\n    });\n  }\n  \n  load({path, alpha}){\n    return new Promise(resolve => {\n      let sheet = new Image();\n      sheet.onload = () => {\n        this.context.canvas.width = sheet.width;\n        this.context.canvas.height = sheet.height;\n        this.context.drawImage(sheet,0,0);\n        let imageData = this.context.getImageData(0,0,sheet.width,sheet.height);\n        let {image, sequences} = this.process(imageData);\n        resolve({image: image, sequences: this.sequences(sequences)});\n      };\n      sheet.src = path;\n    });\n  }\n  \n  process(image){\n    let data = image.data, length = image.data.length;\n    let alpha = [data[0],data[1],data[2]];\n    let marker = [data[length-4],data[length-3],data[length-2]];\n    let hasMarker = !isEqual(marker,alpha);\n    let sequences = {};\n    for(let i=0; i<data.length; i+=4){\n      let pixel = [data[i],data[i+1],data[i+2]];\n      if( hasMarker && isEqual(marker, pixel) && data[i+3] !== 255 ){\n        sequences[data[i+3]] = sequences[data[i+3]] || [];\n        sequences[data[i+3]].push([(i/4) % image.width,Math.floor((i/4) / image.width)]);\n      }\n      if(isEqual(alpha, pixel)){\n        data[i+3] = 0;\n      }\n    }\n    return {image: image, sequences: Object.keys(sequences).length === 0 ? null : sequences };\n  }\n\n  sequences(sequences){\n    return !sequences ? null : Object.keys(sequences).reduce((frames,key) => {\n      let seq = sequences[key].sort((pixel1, pixel2) => (pixel1[0] + pixel1[1]/1000) - (pixel2[0] + pixel2[1]/1000));\n      frames[key] = [];\n      for(let i = 0; i < seq.length; i+=4){\n        frames[key].push({\n          id: i/4,\n          top: seq[i][1] + 1,\n          left: seq[i][0] + 1,\n          width: seq[i+2][0] - seq[i][0] - 1,\n          height: seq[i+1][1] - seq[i][1] - 1,\n        });\n      }\n      return frames;\n    }, {});\n  }\n\n}\n\nexport default new SpriteSheet();"]}