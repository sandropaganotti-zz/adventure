{"version":3,"sources":["app/test/sprite-sheet.js"],"names":[],"mappings":"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","file":"app/test/sprite-sheet.js","sourcesContent":["import spriteSheet from '../js/sprite-sheet.js';\n\nexport default function(){\n\n  describe('SpriteSheet', () => {\n        \n    it('exist', () => {\n      expect(spriteSheet).to.exist;     \n    });\n        \n    it('store and caches an asset', done => {\n      spriteSheet.get({path: './assets/sprite-sheets/guybrush.png'})\n        .then(guybrush => {\n          expect(guybrush).to.exist;\n          let guybrushSheet = spriteSheet.sheets['./assets/sprite-sheets/guybrush.png'];\n          expect(guybrushSheet).to.exist;\n          expect(guybrushSheet.image.width).to.be.equal(guybrush.image.width);\n          expect(guybrushSheet.image.height).to.be.equal(guybrush.image.height);\n          expect(Object.keys(guybrushSheet.sequences).length).to.be.equal(2);\n          expect(guybrushSheet.sequences[252].length).to.be.equal(6);\n        })\n        .then(done);\n    });\n    \n    it('set opacity 0 to pixel with color alpha', done => {\n      spriteSheet.get({path: './assets/sprite-sheets/guybrush.png'})\n        .then(guybrush => {\n          expect(guybrush.image.data[3]).to.be.equal(0);\n        })\n        .then(done);\n    });\n    \n    it('extract the sprite boundary markers', () => {\n      let black = [0,0,0,255];\n      let marker = [255,0,0,255];\n      let sequence = [255,0,0,252];\n      let fakeImage = \n        [ black, black,     black,  \n          black, sequence,  sequence,\n          black, black,     marker ].reduce((prev,cur) => prev.concat(cur), []);\n    \n      let {image, sequences} = spriteSheet.process({data: fakeImage, width: 3, height: 3});\n      \n      expect(sequences).to.not.be.null;\n      expect(sequences[252]).to.not.be.null;\n      expect(sequences[252][0]).to.be.deep.equal([1,1]);\n      expect(sequences[252][1]).to.be.deep.equal([2,1]);\n    });\n    \n    it('generates the frames out of a sequence', () => {\n      let sequences = {1: [[10,50],[40,50],[10,100],[40,100]]};\n      let frames = spriteSheet.sequences(sequences);\n      \n      expect(frames[1]).to.not.be.undefined;\n      expect(frames[1][0]).to.be.deep.equal({\n        id: 0,\n        left: 11,\n        top: 51,\n        width: 29,\n        height: 49\n      });\n    });\n        \n  });\n\n}"]}