{"version":3,"sources":["app/test/sprite.js"],"names":[],"mappings":"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","file":"app/test/sprite.js","sourcesContent":["import Sprite from '../js/sprite.js';\nimport guybrush from './sprites/guybrush.js'; \n\nexport default function(){\n    \n  describe('Sprite', () => {\n       \n    it('exist', () => {\n      expect(Sprite).to.exist;       \n    });\n    \n    describe('configuration options', () => {\n      \n      it('works specifing frame boundaries', () => {\n        let guybrushWalkingRight = new Sprite({\n          sheet: {\n            name: './assets/sprite-sheets/guybrush.png',\n            frames: [{\n              top: 100,\n              left: 50,\n              height: 50,\n              width: 50,\n              duration: 100\n            }]\n          }\n        });\n        \n        expect(guybrushWalkingRight.frames.length).to.be.equal(1);\n        expect(guybrushWalkingRight.frames[0].left).to.be.equal(50);\n      });\n      \n    });\n    \n    describe('Initialization and workflow', () => {\n      let guybrushWalkingRight, context;\n      \n      beforeEach(() => {\n        context = document.createElement('canvas').getContext('2d');\n        context.canvas.width = 100;\n        context.canvas.height = 100;\n        \n        guybrushWalkingRight = guybrush().walkingRight;\n      });\n      \n      it('loads a sprite', done => {\n        guybrushWalkingRight.build().then(() => {\n          expect(guybrushWalkingRight.frames.length).to.be.equal(6);\n        }).then(done);        \n      });\n      \n      it('builds a sprite', done => {\n        guybrushWalkingRight.build().then(() => {\n          expect(guybrushWalkingRight.sheet).to.exist;\n        }).then(done);\n      });\n      \n      it('runs a sprite', done => {\n        let sprite = guybrushWalkingRight;\n        sprite\n          .build()\n          .then(() => {\n            sprite.loop().then(done);\n            \n            sprite.tick({delta: 10});\n            expect(sprite.frame.left).to.be.equal(sprite.frames[0].left);\n            sprite.tick({delta: 95});\n            expect(sprite.frame.left).to.be.equal(sprite.frames[1].left);\n            sprite.tick({delta: 600});\n            expect(sprite.animation).to.be.null;\n          });\n      });\n      \n      it('skips frames when necessary', done => {\n        let sprite = guybrushWalkingRight;\n        sprite\n          .build()\n          .then(() => {\n            sprite.loop().then(done);\n            \n            sprite.tick({delta: 101});\n            expect(sprite.frame.left).to.be.equal(sprite.frames[1].left);\n            sprite.tick({delta: 1000});\n            expect(sprite.animation).to.be.null;\n          });\n      });      \n      \n      it('draw a sprite', done => {\n        let sprite = guybrushWalkingRight;\n        sprite\n          .build()\n          .then(sprite => {\n            sprite.loop().then(done);\n            \n            sprite.tick({delta: 10, x:50, y:50, context: context});\n            let imageData = context.getImageData(50,50,1,1);\n            expect(imageData.data[0]).to.be.equal(68);\n            expect(imageData.data[1]).to.be.equal(68);\n            expect(imageData.data[2]).to.be.equal(68);\n            expect(imageData.data[3]).to.be.equal(255);\n            sprite.tick({delta: 95, x:50, y:50, context: context});\n            imageData = context.getImageData(50,50,1,1);\n            expect(imageData.data[0]).to.be.equal(68);\n            expect(imageData.data[1]).to.be.equal(68);\n            expect(imageData.data[2]).to.be.equal(68);\n            expect(imageData.data[3]).to.be.equal(255);\n            sprite.tick({delta: 1000});\n          });\n      });\n      \n      it('plays a sprite until stopped', done => {\n        let sprite = guybrushWalkingRight;\n        sprite\n          .build()\n          .then(() => sprite.run())\n          .then(() => {\n            sprite.tick({delta: 10});\n            expect(sprite.frame.left).to.be.equal(sprite.frames[0].left);\n            sprite.tick({delta: 600});\n            expect(sprite.frame.left).to.be.equal(sprite.frames[0].left);\n          \n            return sprite.stop();\n          })\n          .then(() => {\n            sprite.tick({delta: 1});\n            expect(sprite.frame).to.be.null;\n          })\n          .then(done);\n      });\n      \n    });\n  });\n}"]}