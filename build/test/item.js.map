{"version":3,"sources":["app/test/item.js"],"names":[],"mappings":"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","file":"app/test/item.js","sourcesContent":["import Item from '../js/item.js';\nimport guybrushSprites from './sprites/guybrush.js'; \n\nexport default function(){\n  \n  describe('Item', () => {\n     \n    it('exists', () => {\n      expect(Item).to.not.be.undefined;\n    });\n    \n    it('create an item', () => {\n      let guybrush = new Item({\n        sprites: guybrushSprites()\n      });\n      \n      expect(Object.keys(guybrush.sprites).length).to.be.equal(3);\n    });\n\n    it('position a sprite', done => {\n      let guybrush = new Item({\n        sprites: guybrushSprites()\n      });\n      guybrush.build().then((item) => {\n        item.still({key: 'waiting', x: 50, y: 50});\n        item.tick({delta: 10});\n        expect(item.sprite.sheet.sequence.key).to.be.equal(249);\n        item.tick({delta: 1000});\n        expect(item.sprite.sheet.sequence.key).to.be.equal(249);\n        expect(item.sprite.frame.id).to.be.equal(0);\n        done();\n      });\n    });\n      \n    it('moves a sprite', done => {\n      let guybrush = new Item({\n        sprites: guybrushSprites()\n      });\n      guybrush.build().then((item) => {\n        item.move({key: 'walkingRight', speed: 2,fromX: 50, fromY: 50, toX: 100, toY: 100}).then(() => {\n          expect(item.x).to.be.equal(100);\n          expect(item.y).to.be.equal(100);\n        }).then(done);\n        item.tick({delta: 10});\n        expect(Math.round(item.x)).to.be.equal(64);\n        expect(Math.round(item.y)).to.be.equal(64);\n        item.tick({delta: 1000});  \n      });\n    });\n    \n    it('allow to group sprites by direction', done => {\n      let sprites = guybrushSprites();\n      let guybrush = new Item({\n        sprites: {\n          walking: {\n            left: sprites.walkingLeft,\n            other: sprites.walkingRight\n          }\n        }\n      });\n      guybrush.build().then(item => {\n        item.move({key: 'walking', speed: 2, fromX: 50, fromY: 50, toX: 110, toY: 100})\n          .then(() => { \n            let newmove = item.move({toX: 50, toY: 100}); \n            expect(item.directions[0]).to.be.equal('left');\n            newmove;\n          })\n          .then(done);\n\n        expect(item.directions[0]).to.be.equal('right');\n        item.tick({delta: 10000});\n      });\n    });\n    \n  });\n  \n}"]}